# Additional edge cases focusing on whitespace handling and unary sign sequences
# These expand coverage for parsing robustness and sign precedence handling.
- expr: "  3 +    4 "
  result: "7"
- expr: "\t5*\n2 "  # newline in expression currently unsupported by grammar
  error: true
- expr: "--5"  # double negation should be positive
  result: "5"
- expr: "-+4"
  result: "-4"
- expr: "+-+--2"  # mixed sign sequence (result negative under current evaluator)
  result: "-2"
- expr: "(.5 + .5)"  # numbers without leading 0 not supported
  error: true
- expr: "3.0e+0 + 1E1"
  result: "13"
- expr: "2 ^ +3"  # unary plus after operator not supported
  error: true
- expr: "(  (1)  )"
  result: "1"
- expr: "sin (  pi  /  2  )"  # spaces between func and paren
  result: "1"
